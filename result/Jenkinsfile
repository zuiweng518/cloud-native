pipeline {
    agent none
    stages {
        stage('Build with Kaniko') {
            agent {
                kubernetes {
                    defaultContainer 'kaniko'
                    //workspaceVolume persistentVolumeClaimWorkspaceVolume(claimName: "jenkins-workspace-pvc", readOnly: false)
                    yaml """
kind: Pod
spec:
  securityContext:
    runAsUser: 1000
  containers:
  - name: kaniko
    image: bitnami/kaniko:latest
    imagePullPolicy: Always
    command:
    - sleep
    args:
    - 99d
    volumeMounts:
      - name: jenkins-docker-cfg
        mountPath: /kaniko/.docker
  volumes:
  - name: jenkins-docker-cfg
    projected:
      sources:
      - secret:
          name: regcred
          items:
            - key: .dockerconfigjson
              path: config.json
"""
                }
            }

            environment {
                IMAGE_PUSH_DESTINATION="zuiweng518/web"
                GIT_COMMIT="${checkout (scm).GIT_COMMIT}"
                IMAGE_TAG = "${BRANCH_NAME}-${GIT_COMMIT}"
                BUILD_IMAGE="${IMAGE_PUSH_DESTINATION}:${IMAGE_TAG}"
                BUILD_IMAGE_LATEST="${IMAGE_PUSH_DESTINATION}:latest"
            }

            steps {
              
              script {
                    sh "echo '{\"auths\":{\"docker.io\":{\"username\":\"zuiweng518\",\"password\":\"19873152-01x\",\"email\":\"mashenghao@126.com\",\"auth\":\"\"}}}' > /kaniko/.docker/config.json"

                    sh "cat ${DOCKERFILE_PATH} | /kaniko/executor --context=/workspace/ --dockerfile=- --destination=$BUILD_IMAGE_LATEST"
                }
           
         }
        }
    }
}
