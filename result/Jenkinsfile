pipeline{
  agent none
  stages{
    stage('Build'){
	    agent{
		  kubernetes{
		    defaultContainer 'kaniko'
			yaml """
			  kind: Pod
			  spec:
			    container:
				- name: kaniko
				  image: gcr.io/kaniko-project/executor:v1.11.0-debug
			      imagePullPolicy: Always
					command:
					- sleep
					args:
					- 99d
					volumeMounts:
					  - name: jenkins-docker-cfg
						mountPath: /kaniko/.docker
				  volumes:
				  - name: jenkins-docker-cfg
					projected:
					  sources:
					  - secret:
						  name: regcred
						  items:
							- key: .dockerconfigjson
							  path: config.json
			"""
		  }
		}
		environment{
		        HARBOR_URL     = "core.harbor.domain"
                IMAGE_PUSH_DESTINATION="${HARBOR_URL}/library/result"
                GIT_COMMIT="${checkout (scm).GIT_COMMIT}"
                IMAGE_TAG = "${BRANCH_NAME}-${GIT_COMMIT}"
                BUILD_IMAGE="${IMAGE_PUSH_DESTINATION}:${IMAGE_TAG}"
                BUILD_IMAGE_LATEST="${IMAGE_PUSH_DESTINATION}:latest"
		}
		steps{
		container(name: 'kaniko', shell: '/busybox/sh') {
                    withEnv(['PATH+EXTRA=/busybox']) {
                        sh '''#!/busybox/sh
                            cd result
                            /kaniko/executor --context `pwd` --destination $IMAGE_PUSH_DESTINATION --insecure
                        '''
                    }
                }
		}
	}
  }
}